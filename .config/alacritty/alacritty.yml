# Configuration for Alacritty, the GPU enhanced terminal emulator


# Any items in the `env` entry below will be added as
# environment variables. Some entries may override variables
# set by alacritty it self.
env:
  # TERM env customization.
  #
  # If this property is not set, alacritty will set it to xterm-256color.
  #
  # Note that some xterm terminfo databases don't declare support for italics.
  # You can verify this by checking for the presence of `smso` and `sitm` in
  # `infocmp xterm-256color`.
  # TERM: xterm-256color
  TERM: alacritty

window:
    # Window dimensions in character columns and lines
  # (changes require restart)
  dimensions:
    columns: 128
    lines: 40

  # Window position (changes require restart)
  #
  # Specified in number of pixels.
  # If the position is not set, the window manager will handle the placement.
  position:
   x: 0
   y: 0

  # Adds this many blank pixels of padding around the window
  # Units are physical pixels; this is not DPI aware.
  # (change requires restart)
  padding:
    x: 2
    y: 2

  # Spread additional padding evenly around the terminal content.
  dynamic_padding: false

  # Allow terminal applications to change Alacritty's window title.
  dynamic_title: true

  # Window decorations
  #
  # Values for `decorations`:
  #     - full: Borders and title bar
  #     - none: Neither borders nor title bar
  #
  # Values for `decorations` (macOS only):
  #     - transparent: Title bar, transparent background and title bar buttons
  #     - buttonless: Title bar, transparent background, but no title bar buttons
  decorations: full

  # Startup Mode (changes require restart)
  #
  # Values for `startup_mode`:
  #   - Windowed
  #   - Maximized
  #   - Fullscreen
  #
  # Values for `startup_mode` (macOS only):
  #   - SimpleFullscreen
  startup_mode: Windowed

  # Window title
  title: Alacritty

  # Window class (Linux only):
  class:
    # Application instance name
    instance: Alacritty
    # General application class
    general: Alacritty

  # GTK theme variant (Linux only)
  #
  # Override the variant of the GTK theme. Commonly supported values are `dark` and `light`.
  # Set this to `None` to use the default theme variant.
  gtk_theme_variant: None

scrolling:
  # Maximum number of lines in the scrollback buffer.
  # Specifying '0' will disable scrolling.
  history: 10000

  # Number of lines the viewport will move for every line scrolled when
  # scrollback is enabled (history > 0).
  multiplier: 3

# Display tabs using this many cells (changes require restart)
# tabspaces: 8

# When true, bold text is drawn using the bright variant of colors.
draw_bold_text_with_bright_colors: true

# Font configuration (changes require restart)
#
# Important font attributes like antialiasing, subpixel aa, and hinting can be
# controlled through fontconfig. Specifically, the following attributes should
# have an effect:
#
# * hintstyle
# * antialias
# * lcdfilter
# * rgba
#
# For instance, if you wish to disable subpixel antialiasing, you might set the
# rgba property to "none". If you wish to completely disable antialiasing, you
# can set antialias to false.
#
# Please see these resources for more information on how to use fontconfig
#
# * https://wiki.archlinux.org/index.php/font_configuration#Fontconfig_configuration
# * file:///usr/share/doc/fontconfig/fontconfig-user.html
font:
  # The normal (roman) font face to use.
  normal:
    family: Cica  # should be "Menlo" or something on macOS.
    #family: monospace # should be "Menlo" or something on macOS.
    # Style can be specified to pick a specific face.
    # style: Regular

  # The bold font face
  bold:
    family: Cica # should be "Menlo" or something on macOS.
    #family: monospace # should be "Menlo" or something on macOS.
    # Style can be specified to pick a specific face.
    # style: Bold

  # The italic font face
  italic:
    family: Cica # should be "Menlo" or something on macOS.
    #family: monospace # should be "Menlo" or something on macOS.
    # Style can be specified to pick a specific face.
    # style: Italic

  # Bold italic font face
  bold_italic:
    # Font family
    #
    # If the bold italic family is not specified, it will fall back to the
    # value specified for the normal font.
    family: Cica

  # Point size of the font
  size: 13.0

  # Offset is the extra space around each character. offset.y can be thought of
  # as modifying the linespacing, and offset.x as modifying the letter spacing.
  offset:
    x: 0
    y: 0

  # Glyph offset determines the locations of the glyphs within their cells with
  # the default being at the bottom. Increase the x offset to move the glyph to
  # the right, increase the y offset to move the glyph upward.
  glyph_offset:
    x: 0
    y: 0

  # OS X only: use thin stroke font rendering. Thin strokes are suitable
  # for retina displays, but for non-retina you probably want this set to
  # false.
  use_thin_strokes: true

debug:
  # Should display the render timer
  render_timer: false

  # Keep the log file after quitting Alacritty.
  persistent_logging: false

  # Log level
  #
  # Values for `log_level`:
  #   - None
  #   - Error
  #   - Warn
  #   - Info
  #   - Debug
  #   - Trace
  log_level: Warn

  # Print all received window events.
  print_events: false

  # Record all characters and escape sequences as test data.
  #ref_test: false
# Use custom cursor colors. If true, display the cursor in the cursor.foreground
# and cursor.background colors, otherwise invert the colors of the cursor.
# custom_cursor_colors: true

# Colors (Dracula)
colors:
  # Default colors
  primary:
    background: '0x282a36'
    foreground: '0xf8f8f2'

  # Cursor colors
  #
  # Colors which should be used to draw the terminal cursor. If these are
  # unset, the cursor color will be the inverse of the cell color.
  cursor:
   text: '#000000'
   cursor: '#ffffff'

  # Vi mode cursor colors
  #
  # Colors for the cursor when the vi mode is active. If these are unset, the
  # cursor color will be the inverse of the cell color.
  vi_mode_cursor:
   text: '#000000'
   cursor: '#ffffff'

  # Selection colors
  #
  # Colors which should be used to draw the selection area. If selection
  # background is unset, selection color will be the inverse of the cell colors.
  # If only text is unset the cell text color will remain the same.
  selection:
   text: '#eaeaea'
   background: '#404040'

  # Normal colors
  normal:
    black:   '0x000000'
    red:     '0xff5555'
    green:   '0x50fa7b'
    yellow:  '0xf1fa8c'
    blue:    '0xcaa9fa'
    magenta: '0xff79c6'
    cyan:    '0x8be9fd'
    white:   '0xbfbfbf'

  # Bright colors
  bright:
    black:   '0x282a35'
    red:     '0xff6e67'
    green:   '0x5af78e'
    yellow:  '0xf4f99d'
    blue:    '0xcaa9fa'
    magenta: '0xff92d0'
    cyan:    '0x9aedfe'
    white:   '0xe6e6e6'

  # dim:
  #  black:   '#000000'
  #  red:     '#8c3336'
  #  green:   '#7a8530'
  #  yellow:  '#97822e'
  #  blue:    '#506d8f'
  #  magenta: '#80638e'
  #  cyan:    '#497e7a'
  #  white:   '#9a9a9a'

  # Indexed Colors
  #
  # The indexed colors include all colors from 16 to 256.
  # When these are not set, they're filled with sensible defaults.
  #
  # Example:
  #   `- { index: 16, color: '#ff00ff' }`
  #
  indexed_colors: []

# Visual Bell
#
# Any time the BEL code is received, Alacritty "rings" the visual bell. Once
# rung, the terminal background will be set to white and transition back to the
# default background color. You can control the rate of this transition by
# setting the `duration` property (represented in milliseconds). You can also
# configure the transition function by setting the `animation` property.
#
# Possible values for `animation`
# `Ease`
# `EaseOut`
# `EaseOutSine`
# `EaseOutQuad`
# `EaseOutCubic`
# `EaseOutQuart`
# `EaseOutQuint`
# `EaseOutExpo`
# `EaseOutCirc`
# `Linear`
#
# To completely disable the visual bell, set its duration to 0.
#
bell:
  animation: EaseOutExpo
  duration: 0
  color: '0xffffff'

# Background opacity
background_opacity: 1.0

selection:
  semantic_escape_chars: ",│`|:\"' ()[]{}<>\t"

  # When set to `true`, selected text will be copied to the primary clipboard.
  save_to_clipboard: false

cursor:
  # Cursor style
  #
  # Values for `style`:
  #   - ▇ Block
  #   - _ Underline
  #   - | Beam
  style: Block

  # Vi mode cursor style
  #
  # If the vi mode cursor style is `None` or not specified, it will fall back to
  # the style of the active value of the normal cursor.
  #
  # See `cursor.style` for available options.
  vi_mode_style: None

  # If this is `true`, the cursor will be rendered as a hollow box when the
  # window is not focused.
  unfocused_hollow: true

  # Thickness of the cursor relative to the cell width as floating point number
  # from `0.0` to `1.0`.
  thickness: 0.15

# Shell
#
# You can set `shell.program` to the path of your favorite shell, e.g. `/bin/fish`.
# Entries in `shell.args` are passed unmodified as arguments to the shell.
#
# Default:
#   - (macOS) /bin/bash --login
#   - (Linux/BSD) user login shell
#   - (Windows) powershell
shell:
 program: /usr/local/bin/zsh
 args:
   - --login

# Startup directory
#
# Directory the shell is started in. If this is unset, or `None`, the working
# directory of the parent process will be used.
working_directory: None

# Send ESC (\x1b) before characters when alt is pressed.
alt_send_esc: true

# Mouse bindings
#
# Currently doesn't support modifiers. Both the `mouse` and `action` fields must
# be specified.
#
# Values for `mouse`:
# - Middle
# - Left
# - Right
# - Numeric identifier such as `5`
#
# Values for `action`:
# - Paste
# - PasteSelection
# - Copy (TODO)
mouse_bindings:
  - { mouse: Middle, action: PasteSelection }

mouse:
  double_click: { threshold: 300 }
  triple_click: { threshold: 300 }
  hide_when_typing: false
  url:
    # URL launcher
    #
    # This program is executed when clicking on a text which is recognized as a URL.
    # The URL is always added to the command as the last parameter.
    #
    # When set to `None`, URL launching will be disabled completely.
    #
    # Default:
    #   - (macOS) open
    #   - (Linux/BSD) xdg-open
    #   - (Windows) explorer
    launcher:
     program: open
     args: []

    # URL modifiers
    #
    # These are the modifiers that need to be held down for opening URLs when clicking
    # on them. The available modifiers are documented in the key binding section.
    modifiers: None

# Live config reload (changes require restart)
live_config_reload: true

# Key bindings
#
# Each binding is defined as an object with some properties. Most of the
# properties are optional. All of the alphabetical keys should have a letter for
# the `key` value such as `V`. Function keys are probably what you would expect
# as well (F1, F2, ..). The number keys above the main keyboard are encoded as
# `Key1`, `Key2`, etc. Keys on the number pad are encoded `Number1`, `Number2`,
# etc.  These all match the glutin::VirtualKeyCode variants.
#
# Possible values for `mods`
# `Command`, `Super` refer to the super/command/windows key
# `Control` for the control key
# `Shift` for the Shift key
# `Alt` and `Option` refer to alt/option
#
# mods may be combined with a `|`. For example, requiring control and shift
# looks like:
#
# mods: Control|Shift
#
# The parser is currently quite sensitive to whitespace and capitalization -
# capitalization must match exactly, and piped items must not have whitespace
# around them.
#
# Either an `action`, `chars`, or `command` field must be present.
#   `action` must be one of `Paste`, `PasteSelection`, `Copy`, or `Quit`.
#   `chars` writes the specified string every time that binding is activated.
#     These should generally be escape sequences, but they can be configured to
#     send arbitrary strings of bytes.
#   `command` must be a map containing a `program` string, and `args` array of
#     strings. For example:
#     - { ... , command: { program: "alacritty", args: ["-e", "vttest"] } }
#
# Want to add a binding (e.g. "PageUp") but are unsure what the X sequence
# (e.g. "\x1b[5~") is? Open another terminal (like xterm) without tmux,
# then run `showkey -a` to get the sequence associated to a key combination.
key_bindings:
#   - { key: V,        mods: Control|Shift,    action: Paste               }
#   - { key: C,        mods: Control|Shift,    action: Copy                }
  # - { key: V,        mods: Command, action: Paste               }

#   - { key: W,        mods: Command, action: Quit                         }
#   - { key: Insert,   mods: Shift,   action: PasteSelection               }
#   - { key: Key0,     mods: Control|Shift, action: ResetFontSize          }
#   - { key: Equals,   mods: Control|Shift, action: IncreaseFontSize       }
#   - { key: Subtract, mods: Control|Shift, action: DecreaseFontSize       }
  # - { key: Home,                    chars: "\x1bOH",   mode: AppCursor   }
  # - { key: Home,                    chars: "\x1b[H",   mode: ~AppCursor  }
  # - { key: End,                     chars: "\x1bOF",   mode: AppCursor   }
  # - { key: End,                     chars: "\x1b[F",   mode: ~AppCursor  }
#   - { key: PageUp,   mods: Shift,   chars: "\x1b[5;2~"                   }
#   - { key: PageUp,   mods: Control, chars: "\x1b[5;5~"                   }
#   - { key: PageUp,                  chars: "\x1b[5~"                     }
#   - { key: PageDown, mods: Shift,   chars: "\x1b[6;2~"                   }
#   - { key: PageDown, mods: Control, chars: "\x1b[6;5~"                   }
#   - { key: PageDown,                chars: "\x1b[6~"                     }
#   - { key: Tab,      mods: Shift,   chars: "\x1b[Z"                      }
#   - { key: Back,                    chars: "\x7f"                        }
#   - { key: Back,     mods: Alt,     chars: "\x1b\x7f"                    }
#   - { key: Insert,                  chars: "\x1b[2~"                     }
  # - { key: Delete,                  chars: "\x1b[3~"                     }
  # - { key: Left,     mods: Shift,   chars: "\x1b[1;2D"                   }
  # - { key: Left,     mods: Control, chars: "\x1b[1;5D"                   }
  # - { key: Left,     mods: Alt,     chars: "\x1b[1;3D"                   }
  # - { key: Left,                    chars: "\x1b[D",   mode: ~AppCursor  }
  # - { key: Left,                    chars: "\x1bOD",   mode: AppCursor   }
  # - { key: Right,    mods: Shift,   chars: "\x1b[1;2C"                   }
  # - { key: Right,    mods: Control, chars: "\x1b[1;5C"                   }
  # - { key: Right,    mods: Alt,     chars: "\x1b[1;3C"                   }
  # - { key: Right,                   chars: "\x1b[C",   mode: ~AppCursor  }
  # - { key: Right,                   chars: "\x1bOC",   mode: AppCursor   }
  # - { key: Up,       mods: Shift,   chars: "\x1b[1;2A"                   }
  # - { key: Up,       mods: Control, chars: "\x1b[1;5A"                   }
  # - { key: Up,       mods: Alt,     chars: "\x1b[1;3A"                   }
  # - { key: Up,                      chars: "\x1b[A",   mode: ~AppCursor  }
  # - { key: Up,                      chars: "\x1bOA",   mode: AppCursor   }
  # - { key: Down,     mods: Shift,   chars: "\x1b[1;2B"                   }
  # - { key: Down,     mods: Control, chars: "\x1b[1;5B"                   }
  # - { key: Down,     mods: Alt,     chars: "\x1b[1;3B"                   }
  # - { key: Down,                    chars: "\x1b[B",   mode: ~AppCursor  }
  # - { key: Down,                    chars: "\x1bOB",   mode: AppCursor   }
  - { key: Space,    mods: Control, chars: "\x00" }
  # - { key: Key6,     mods: Control, chars: "\x1e"                     }
#   - { key: F1,                      chars: "\x1bOP"                      }
#   - { key: F2,                      chars: "\x1bOQ"                      }
#   - { key: F3,                      chars: "\x1bOR"                      }
#   - { key: F4,                      chars: "\x1bOS"                      }
#   - { key: F5,                      chars: "\x1b[15~"                    }
#   - { key: F6,                      chars: "\x1b[17~"                    }
#   - { key: F7,                      chars: "\x1b[18~"                    }
#   - { key: F8,                      chars: "\x1b[19~"                    }
#   - { key: F9,                      chars: "\x1b[20~"                    }
#   - { key: F10,                     chars: "\x1b[21~"                    }
#   - { key: F11,                     chars: "\x1b[23~"                    }
#   - { key: F12,                     chars: "\x1b[24~"                    }
#   - { key: F1,       mods: Shift,   chars: "\x1b[1;2P"                   }
#   - { key: F2,       mods: Shift,   chars: "\x1b[1;2Q"                   }
#   - { key: F3,       mods: Shift,   chars: "\x1b[1;2R"                   }
#   - { key: F4,       mods: Shift,   chars: "\x1b[1;2S"                   }
#   - { key: F5,       mods: Shift,   chars: "\x1b[15;2~"                  }
#   - { key: F6,       mods: Shift,   chars: "\x1b[17;2~"                  }
#   - { key: F7,       mods: Shift,   chars: "\x1b[18;2~"                  }
#   - { key: F8,       mods: Shift,   chars: "\x1b[19;2~"                  }
#   - { key: F9,       mods: Shift,   chars: "\x1b[20;2~"                  }
#   - { key: F10,      mods: Shift,   chars: "\x1b[21;2~"                  }
#   - { key: F11,      mods: Shift,   chars: "\x1b[23;2~"                  }
#   - { key: F12,      mods: Shift,   chars: "\x1b[24;2~"                  }
#   - { key: F1,       mods: Control, chars: "\x1b[1;5P"                   }
#   - { key: F2,       mods: Control, chars: "\x1b[1;5Q"                   }
#   - { key: F3,       mods: Control, chars: "\x1b[1;5R"                   }
#   - { key: F4,       mods: Control, chars: "\x1b[1;5S"                   }
#   - { key: F5,       mods: Control, chars: "\x1b[15;5~"                  }
#   - { key: F6,       mods: Control, chars: "\x1b[17;5~"                  }
#   - { key: F7,       mods: Control, chars: "\x1b[18;5~"                  }
#   - { key: F8,       mods: Control, chars: "\x1b[19;5~"                  }
#   - { key: F9,       mods: Control, chars: "\x1b[20;5~"                  }
#   - { key: F10,      mods: Control, chars: "\x1b[21;5~"                  }
#   - { key: F11,      mods: Control, chars: "\x1b[23;5~"                  }
#   - { key: F12,      mods: Control, chars: "\x1b[24;5~"                  }
#   - { key: F1,       mods: Alt,     chars: "\x1b[1;6P"                   }
#   - { key: F2,       mods: Alt,     chars: "\x1b[1;6Q"                   }
#   - { key: F3,       mods: Alt,     chars: "\x1b[1;6R"                   }
#   - { key: F4,       mods: Alt,     chars: "\x1b[1;6S"                   }
#   - { key: F5,       mods: Alt,     chars: "\x1b[15;6~"                  }
#   - { key: F6,       mods: Alt,     chars: "\x1b[17;6~"                  }
#   - { key: F7,       mods: Alt,     chars: "\x1b[18;6~"                  }
#   - { key: F8,       mods: Alt,     chars: "\x1b[19;6~"                  }
#   - { key: F9,       mods: Alt,     chars: "\x1b[20;6~"                  }
#   - { key: F10,      mods: Alt,     chars: "\x1b[21;6~"                  }
#   - { key: F11,      mods: Alt,     chars: "\x1b[23;6~"                  }
#   - { key: F12,      mods: Alt,     chars: "\x1b[24;6~"                  }
#   - { key: F1,       mods: Super,   chars: "\x1b[1;3P"                   }
#   - { key: F2,       mods: Super,   chars: "\x1b[1;3Q"                   }
#   - { key: F3,       mods: Super,   chars: "\x1b[1;3R"                   }
#   - { key: F4,       mods: Super,   chars: "\x1b[1;3S"                   }
#   - { key: F5,       mods: Super,   chars: "\x1b[15;3~"                  }
#   - { key: F6,       mods: Super,   chars: "\x1b[17;3~"                  }
#   - { key: F7,       mods: Super,   chars: "\x1b[18;3~"                  }
#   - { key: F8,       mods: Super,   chars: "\x1b[19;3~"                  }
#   - { key: F9,       mods: Super,   chars: "\x1b[20;3~"                  }
#   - { key: F10,      mods: Super,   chars: "\x1b[21;3~"                  }
#   - { key: F11,      mods: Super,   chars: "\x1b[23;3~"                  }
#   - { key: F12,      mods: Super,   chars: "\x1b[24;3~"                  }
#
  - { key: Paste,                                action: Paste          }
  - { key: Copy,                                 action: Copy           }
  - { key: L,         mods: Control,             action: ClearLogNotice }
  - { key: L,         mods: Control, mode: ~Vi,  chars: "\x0c"          }
  - { key: PageUp,    mods: Shift,   mode: ~Alt, action: ScrollPageUp,  }
  - { key: PageDown,  mods: Shift,   mode: ~Alt, action: ScrollPageDown }
  - { key: Home,      mods: Shift,   mode: ~Alt, action: ScrollToTop,   }
  - { key: End,       mods: Shift,   mode: ~Alt, action: ScrollToBottom }
  # Vi Mode
  - { key: Space,  mods: Shift|Control, mode: Vi, action: ScrollToBottom          }
  - { key: Space,  mods: Shift|Control,           action: ToggleViMode            }
  - { key: Escape,                      mode: Vi, action: ClearSelection          }
  - { key: I,                           mode: Vi, action: ScrollToBottom          }
  - { key: I,                           mode: Vi, action: ToggleViMode            }
  - { key: Y,      mods: Control,       mode: Vi, action: ScrollLineUp            }
  - { key: E,      mods: Control,       mode: Vi, action: ScrollLineDown          }
  - { key: G,                           mode: Vi, action: ScrollToTop             }
  - { key: G,      mods: Shift,         mode: Vi, action: ScrollToBottom          }
  - { key: B,      mods: Control,       mode: Vi, action: ScrollPageUp            }
  - { key: F,      mods: Control,       mode: Vi, action: ScrollPageDown          }
  - { key: U,      mods: Control,       mode: Vi, action: ScrollHalfPageUp        }
  - { key: D,      mods: Control,       mode: Vi, action: ScrollHalfPageDown      }
  - { key: Y,                           mode: Vi, action: Copy                    }
  - { key: Y,                           mode: Vi, action: ClearSelection          }
  - { key: Copy,                        mode: Vi, action: ClearSelection          }
  - { key: V,                           mode: Vi, action: ToggleNormalSelection   }
  - { key: V,      mods: Shift,         mode: Vi, action: ToggleLineSelection     }
  - { key: V,      mods: Control,       mode: Vi, action: ToggleBlockSelection    }
  - { key: V,      mods: Alt,           mode: Vi, action: ToggleSemanticSelection }
  - { key: Return,                      mode: Vi, action: Open                    }
  - { key: K,                           mode: Vi, action: Up                      }
  - { key: J,                           mode: Vi, action: Down                    }
  - { key: H,                           mode: Vi, action: Left                    }
  - { key: L,                           mode: Vi, action: Right                   }
  - { key: Up,                          mode: Vi, action: Up                      }
  - { key: Down,                        mode: Vi, action: Down                    }
  - { key: Left,                        mode: Vi, action: Left                    }
  - { key: Right,                       mode: Vi, action: Right                   }
  - { key: Key0,                        mode: Vi, action: First                   }
  - { key: Key4,   mods: Shift,         mode: Vi, action: Last                    }
  - { key: Key6,   mods: Shift,         mode: Vi, action: FirstOccupied           }
  - { key: H,      mods: Shift,         mode: Vi, action: High                    }
  - { key: M,      mods: Shift,         mode: Vi, action: Middle                  }
  - { key: L,      mods: Shift,         mode: Vi, action: Low                     }
  - { key: B,                           mode: Vi, action: SemanticLeft            }
  - { key: W,                           mode: Vi, action: SemanticRight           }
  - { key: E,                           mode: Vi, action: SemanticRightEnd        }
  - { key: B,      mods: Shift,         mode: Vi, action: WordLeft                }
  - { key: W,      mods: Shift,         mode: Vi, action: WordRight               }
  - { key: E,      mods: Shift,         mode: Vi, action: WordRightEnd            }
  - { key: Key5,   mods: Shift,         mode: Vi, action: Bracket                 }
  # (macOS only)
  - { key: K,      mods: Command, mode: ~Vi, chars: "\x0c"            }
  - { key: Key0,   mods: Command,            action: ResetFontSize    }
  - { key: Equals, mods: Command,            action: IncreaseFontSize }
  - { key: NumpadAdd,    mods: Command,            action: IncreaseFontSize }
  - { key: Minus,  mods: Command,            action: DecreaseFontSize }
  - { key: K,      mods: Command,            action: ClearHistory     }
  - { key: V,      mods: Command,            action: Paste            }
  - { key: C,      mods: Command,            action: Copy             }
  - { key: C,      mods: Command, mode: Vi,  action: ClearSelection   }
  - { key: H,      mods: Command,            action: Hide             }
  - { key: M,      mods: Command,            action: Minimize         }
  - { key: Q,      mods: Command,            action: Quit             }
  - { key: W,      mods: Command,            action: Quit             }
  - { key: N,      mods: Command,            action: SpawnNewInstance }
  - { key: F,      mods: Command|Control,    action: ToggleFullscreen }
